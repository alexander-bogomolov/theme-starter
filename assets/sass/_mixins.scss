%vertical-align {
  position: relative;
  top: 50%;
  @include translateY(-50%);
}

%no-margin-and-padding {
  margin:           0;
  padding:          0;
}

@function rem($value: 12, $base: 16) {
  @return ($value / $base) * 1rem
}


@mixin x-rem($property, $values, $base: 16) {
  @if type-of($values) == "number" {
    #{$property}: $values+px;
    #{$property}: rem($values, $base);
  } @else {
    $rem-values: unquote("");
    $px-values: unquote("");

    @each $value in $values {
      @if $value == 0 or type-of($value) == "string" or type-of($value) == "color" {
        $px-values: append($px-values, $value + px);
        $rem-values: append($rem-values, rem($value, $base));
      } @else {
        $px-values: append($px-values, $value + px);
        $rem-values: append($rem-values, rem($value, $base));
      }
    }

    #{$property}: $px-values;
    #{$property}: $rem-values;
  }
}

// Font Size
@mixin font-size($size: 12, $base: 16) {
  @include x-rem('font-size', $size, $base);
}


// Mixins by Jens Grochtdreis
// https://gist.github.com/jensgro
// ------------------------------------------

// Converts a solid color with an alpha-channel-value into rgba
// and an IE-filter as fallback for oldIE (IE up to version 8)
@mixin all-rgba($color, $alpha) {
  $rgba: rgba($color, $alpha);
  $ie-color: ie-hex-str($rgba);
  @if $isoldIE == false {
    background-color: $color; // fallback for old browser that are not oldIE - very seldom
    background-color: $rgba;
  } @else if $isoldIE == true {
    background-color: transparent; // counteract against the defintion for older modern browsers
    filter: progid:DXImageTransform.Microsoft.Gradient(GradientType=1, StartColorStr='#{$ie-color}', EndColorStr='#{$ie-color}');
    zoom: 1; // trigger hasLayout
  }
}